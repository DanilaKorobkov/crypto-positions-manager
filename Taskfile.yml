version: '3'

silent: true

vars:
  PROJECT_NAME:
    sh: head -n 1 go.mod | awk -F ' ' '{print $2}' | awk -F '/' '{print $NF}'
  GIT_SHA:
    sh: git rev-parse --short HEAD
  GIT_BRANCH:
    sh: git rev-parse --abbrev-ref HEAD
  BRANCH_SLUG:
    sh: echo "{{.GIT_BRANCH}}" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]' | cut -c 1-30

tasks:

  project-name:
    desc: Get project name
    cmds:
      - echo "{{.PROJECT_NAME}}"

  image-tag:
    desc: Get Docker image tag
    silent: true
    cmds:
      - |
        if [ "{{.GIT_BRANCH}}" = "main" ]; then
          echo "main-{{.GIT_SHA}}"
        else
          echo "{{.BRANCH_SLUG}}-{{.GIT_SHA}}"
        fi

  format:
    desc: Lint the source code
    cmds:
      - docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v2.4.0 golangci-lint fmt
      - docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v2.4.0 golangci-lint run --fix

  lint:
    desc: All linters
    deps: [lint-golang, lint-actions]

  lint-golang:
    desc: Lint the source code
    cmds:
      - docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v2.4.0 golangci-lint run

  lint-actions:
    desc: Lint the github actions
    cmds:
      - go run github.com/rhysd/actionlint/cmd/actionlint@latest

  tests:
    desc: Run tests
    cmds:
      - go test -race ./...

  build:
    desc: Build docker image with service
    cmds:
      - docker build .
        --file build/Dockerfile
        --tag {{.PROJECT_NAME}}
        --pull

  run-image:
    desc: Run service in docker
    cmds:
      - docker run --rm --env-file .env {{.PROJECT_NAME}}
