name: cicd

on:
  - push

permissions:
  contents: read
  packages: write

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Taskfile
        uses: ./.github/actions/taskfile

      - name: Linters
        run: task lint

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Taskfile
        uses: ./.github/actions/taskfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: task build

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine Docker tags
        id: set-env
        run: |
          IMAGE_NAME="ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/crypto-positions-manager"

          if [ "${GITHUB_REF#refs/heads/}" = "main" ]; then
            IMAGE_TAG="main-${GITHUB_SHA::7}"
            LATEST_TAG="latest"
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            SAFE_BRANCH=${BRANCH_NAME//\//-}
            IMAGE_TAG="feat-${SAFE_BRANCH}-${GITHUB_SHA::7}"
            LATEST_TAG="feat-${SAFE_BRANCH}-latest"
          fi

          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 \
            -t $IMAGE_NAME:$IMAGE_TAG \
            -t $IMAGE_NAME:$LATEST_TAG \
            -f build/Dockerfile \
            --push .
