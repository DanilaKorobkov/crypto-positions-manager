name: cicd

on:
  push:
    branches-ignore:
      - main

jobs:
  lint-golang:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Run golang ci linter
        run: task lint-golang

  lint-actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Run actions linter
        run: task lint-actions

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Run tests
        run: task tests

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Setup docker sdk
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image name and tag
        run: |
          IMAGE_NAME="ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/$(task project-name)"
          IMAGE_TAG="$(task image-tag)"
          
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build docker images
        run: |
          docker buildx build \
            -t "$IMAGE_NAME:$IMAGE_TAG" \
            -f build/Dockerfile \
            .