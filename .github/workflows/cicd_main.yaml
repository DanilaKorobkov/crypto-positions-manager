name: cicd_main

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  lint-golang:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Run golang ci linter
        run: task lint-golang

  lint-actions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Run actions linter
        run: task lint-actions

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Run tests
        run: task tests

  build:
    runs-on: ubuntu-latest
    needs: [lint-golang, lint-actions, tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Setup docker sdk
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image name and tag
        run: |
          IMAGE_NAME="ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/$(task project-name)"
          IMAGE_TAG=$(task image-tag)
          
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and push docker images
        run: |
          docker buildx build \
            -t $IMAGE_NAME:$IMAGE_TAG \
            -t $IMAGE_NAME:latest \
            -f build/Dockerfile \
            --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install taskfile
        uses: ./.github/actions/taskfile

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Run deploy task
        run: task deploy/service
        env:
          SERVER_IP: ${{ secrets.THE_GRAPH_TOKEN }}
          THE_GRAPH_TOKEN: ${{ secrets.THE_GRAPH_TOKEN }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          SUBJECT_WALLET: ${{ secrets.SUBJECT_WALLET }}
          SUBJECT_TELEGRAM_USER_ID: ${{ secrets.SUBJECT_TELEGRAM_USER_ID }}
          ERROR_RECEIVER_TELEGRAM_USER_ID: ${{ secrets.ERROR_RECEIVER_TELEGRAM_USER_ID }}
          BASE_UNISWAP_V3_SUBGRAPH_ID: ${{ env.BASE_UNISWAP_V3_SUBGRAPH_ID }}
          BASE_AERODROME_SUBGRAPH_ID: ${{ env.BASE_AERODROME_SUBGRAPH_ID }}
          CHECK_INTERVAL: ${{ env.CHECK_INTERVAL }}
